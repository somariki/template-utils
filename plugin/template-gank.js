const{createApp,ref,reactive,watch,onMounted,onUnmounted}=Vue,uid="onecomme.plugin.template-utils",app=createApp({setup(){const e=new URLSearchParams(window.location.search),t=`${window.location.pathname}`.substring(1).split("/").slice(1,3).join("/")||null,a=reactive({baseURL:`${window.location.protocol}//${window.location.host}`,hostURL:["http://127.0.0.1:11180"],localURL:"http://localhost:11180",code:e.get("code")||"",isCustom:e.get("cus")||0,templatePath:t||"",presetId:e.get("preset")||0});let o=[];const n=reactive({enableDonationOverlay:!1,userId:null}),s=reactive({title:null,description:null,balance:0,firstBalance:0,target:0,isActive:!1,isComplete:!1,isPublishTarget:!0,supporterCount:0,balancePercentage:0,progressPercentage:0}),r=ref(null),l=ref([]),i=e=>{if("fastRender"===e.key){const e=JSON.parse(localStorage.getItem("fastRender"));1==!!e?.templateId&&(e?.templateId??null)==t&&(e?.presetId??0)==a.presetId&&c(e.cssData)}};function c(e){if(o=[],e.forEach((e=>{const t=!!e?.flag?.isCss,a=!!e?.flag?.isJs;if(!0===t){const t=e.cssvar,a=e.value||"";document.documentElement.style.setProperty(t,a)}!0===a&&o.push({code:e.code,data:e.data})})),Object.keys(o).length>0){const e=o.find((e=>"gank-enable-on"===e.code))?.data||null,t=o.find((e=>"gank-id"===e.code))?.data||null;n.enableDonationOverlay="true"===e?.value,n.userId=t?.value?t?.value:null}o.length>0&&window.dispatchEvent(new CustomEvent("presetDataUpdated",{detail:o})),!0===n.enableDonationOverlay&&null!=n.userId?(u(n.userId),p(n.userId)):r.value&&r.value.close()}function d(e){s.title=e.title,s.description=e.description,s.balance=e.balance?parseFloat(e.balance).toFixed(2):0,s.firstBalance=e.firstBalance,s.target=e.target,s.isActive=e.isActive,s.isComplete=e.isComplete,s.isPublishTarget=e.isPublishTarget,s.supporterCount=e.supporterCount;const t=s.balance>0?(s.balance/e.target*100).toFixed(2):"0.00";s.balancePercentage=t,s.progressPercentage=t>100?100:t}const u=async e=>{try{const t=`https://api.ganknow.com/v1/users/user-donation-overlay/${e}`,a=await fetch(t);if(!a.ok)throw new Error("Network response was not ok");const o=await a.json();if(Array.isArray(o.data.goalsDonation)&&o.data.goalsDonation.length>0){d(o.data.goalsDonation[0])}}catch(e){console.error("Error fetching data:",e)}},p=e=>{const t=`wss://api.ganknow.com/v1/ws/users/media-share?page=donation_overlay&source=streaming&user_id=${e}`;r.value=new WebSocket(t),r.value.onopen=()=>{},r.value.onmessage=e=>{l.value=e.data},r.value.onerror=e=>{},r.value.onclose=()=>{}};watch(l,((e,t)=>{try{const t=JSON.parse(e);if("DONATION_OVERLAY"===t.eventType&&Array.isArray(t.data.goalsDonation)&&t.data.goalsDonation.length>0){d(t.data.goalsDonation[0])}}catch(e){console.error("Error parsing messages:",e)}}));return onMounted((async()=>{await(async()=>{try{const e=await fetch(`${a.baseURL}/api/plugins/${uid}?code=${a.code}&isCustom=${a.isCustom}&presetId=${a.presetId}&templateId=${a.templatePath}`,{method:"GET"}),{response:t}=await e.json();t&&t.data.preset&&c(t.data.preset),!0===n.enableDonationOverlay&&null!=n.userId?(await u(n.userId),p(n.userId)):r.value&&r.value.close(),document.body.removeAttribute("hidden")}catch(e){console.error(e.message)}})(),window.addEventListener("storage",i)})),onUnmounted((()=>{window.removeEventListener("storage",i),r.value&&r.value.close()})),{gank:n,goalsDonation:s}}});app.mount("#app");